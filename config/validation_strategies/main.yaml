parameters:
  comprehensive_pre_validation:
    schema:
      type: object
      required: ["agent"]
      additionalProperties: false
      properties:
        agent:
          type: object
          required: ["validation"]
          additionalProperties: false
          properties:
            validation:
              type: object
              additionalProperties: false
              properties:
                # Esquema de validação dinâmica
              required: []
    additionalProperties: false
    required: ["agent"]
    type: object
# Hydra Group Configuration for Validation Strategies (Located in config/validation_strategies/main.yaml)

SYNTAX_ONLY:
  steps:
    - validate_syntax
    - PatchApplicatorStep
  sanity_check_step: "skip_sanity_check"

BENCHMARK_ONLY:
  steps:
    - run_benchmark_validation
    - PatchApplicatorStep
  sanity_check_step: "run_pytest"

SYNTAX_AND_PYTEST:
  steps:
    - validate_syntax
    - run_pytest
    - PatchApplicatorStep
  sanity_check_step: "run_pytest"

FULL_VALIDATION:
  steps:
    - validate_syntax
    - ValidateJsonSyntax
    - run_pytest
    - run_benchmark_validation
    - PatchApplicatorStep
  sanity_check_step: "run_pytest"

DOC_UPDATE_STRATEGY:
  steps:
    - validate_syntax
    - PatchApplicatorStep
    - check_file_existence
  sanity_check_step: "check_file_existence"

CONFIG_UPDATE_STRATEGY:
  steps:
    - ValidateJsonSyntax
    - PatchApplicatorStep
  sanity_check_step: "check_file_existence"

CONFIG_SYNTAX_CHECK:
  steps:
    - ValidateJsonSyntax
  sanity_check_step: "skip_sanity_check"

# NEW EVOLUTION-FOCUSED STRATEGIES
EVOLUTION_PERMISSIVE:
  steps:
    - validate_syntax
    - PatchApplicatorStep
  sanity_check_step: "skip_sanity_check"

NEW_FEATURE_STRATEGY:
  steps:
    - validate_syntax
    - PatchApplicatorStep
  sanity_check_step: "check_file_existence"

CAPABILITY_EXPANSION:
  steps:
    - validate_syntax
    - PatchApplicatorStep
  sanity_check_step: "skip_sanity_check"

INNOVATION_STRATEGY:
  steps:
    - validate_syntax
    - PatchApplicatorStep
  sanity_check_step: "skip_sanity_check"

DISCARD:
  steps: []
  sanity_check_step: "skip_sanity_check"

TEST_FIX_STRATEGY:
  steps:
    - validate_syntax
    - PatchApplicatorStep
  sanity_check_step: "run_pytest"

CREATE_NEW_TEST_FILE_STRATEGY:
  steps:
    - validate_syntax
    - run_pytest_new_file
    - PatchApplicatorStep
  sanity_check_step: "run_pytest_new_file"

AUTO_CORRECTION_STRATEGY:
  steps:
    - validate_syntax
    - PatchApplicatorStep
    - run_pytest
  sanity_check_step: "run_pytest"

CYCLOMATIC_COMPLEXITY_CHECK:
  name: "CYCLOMATIC_COMPLEXITY_CHECK"
  description: "Bloqueia patches com complexidade ciclomática acima de 30"
  threshold: 30