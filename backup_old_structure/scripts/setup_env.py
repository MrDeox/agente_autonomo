#!/usr/bin/env python3
"""
üîß Environment Setup Script
Configura as vari√°veis de ambiente necess√°rias para o Hephaestus
"""

import os
from pathlib import Path

def setup_environment():
    """Configura o ambiente com as vari√°veis necess√°rias"""
    env_file = Path('.env')
    
    # Verifica se .env j√° existe
    if env_file.exists():
        print(f"‚úÖ Arquivo .env j√° existe")
        with open(env_file, 'r') as f:
            content = f.read()
            print("Conte√∫do atual:")
            print(content)
        return
    
    # Cria arquivo .env com configura√ß√µes padr√£o
    env_content = """# Hephaestus Environment Variables
# Para uso com modelos OpenRouter
OPENROUTER_API_KEY=your_openrouter_api_key_here

# Para uso com modelos Gemini
GEMINI_API_KEY=your_gemini_api_key_here

# Para uso com modelos OpenAI
OPENAI_API_KEY=your_openai_api_key_here

# Para uso com modelos Anthropic
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Configura√ß√µes do sistema
HEPHAESTUS_DEBUG=true
HEPHAESTUS_LOG_LEVEL=INFO
HEPHAESTUS_EVOLUTION_ENABLED=true
HEPHAESTUS_AUTO_CORRECTION_ENABLED=true
"""
    
    with open(env_file, 'w') as f:
        f.write(env_content)
    
    print(f"‚úÖ Arquivo .env criado com configura√ß√µes padr√£o")
    print(f"üìù Edite o arquivo .env para adicionar suas chaves de API")
    print("\nVari√°veis configuradas:")
    print("- OPENROUTER_API_KEY (para acesso a modelos via OpenRouter)")
    print("- GEMINI_API_KEY (para modelos Gemini)")
    print("- OPENAI_API_KEY (para modelos OpenAI)")
    print("- ANTHROPIC_API_KEY (para modelos Anthropic)")
    print("- Configura√ß√µes do sistema Hephaestus")

if __name__ == "__main__":
    setup_environment() 