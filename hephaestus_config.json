{
  "validation_strategies": {
    "CYCLOMATIC_COMPLEXITY_CHECK": {
      "name": "CYCLOMATIC_COMPLEXITY_CHECK",
      "description": "Bloqueia patches com complexidade ciclom√°tica acima de 30",
      "threshold": 30
    }
  }
}
{
  "models": {
    "architect_default": {
      "primary": "qwen/qwen3-30b-a3b:free",
      "fallback": "gemini/gemini-2.5-pro"
    },
    "maestro_default": {
      "primary": "qwen/qwen3-30b-a3b:free",
      "fallback": "gemini/gemini-2.5-pro"
    },
    "objective_generator": {
      "primary": "qwen/qwen3-30b-a3b:free",
      "fallback": "gemini/gemini-2.5-pro"
    },
    "capacitation_generator": {
      "primary": "qwen/qwen3-30b-a3b:free",
      "fallback": "gemini/gemini-2.5-pro"
    },
    "error_analyzer": {
      "primary": "qwen/qwen3-30b-a3b:free",
      "fallback": "gemini/gemini-2.5-pro"
    }
  },
  "code_analysis_thresholds": {
    "file_loc": 300,
    "function_loc": 50,
    "function_cc": 10
  },
  "validation_strategies": {
    "SYNTAX_ONLY": {
      "steps": ["validate_syntax", "PatchApplicatorStep"],
      "sanity_check_step": "skip_sanity_check"
    },
    "BENCHMARK_ONLY": {
      "steps": ["run_benchmark_validation", "PatchApplicatorStep"],
      "sanity_check_step": "run_pytest"
    },
    "SYNTAX_AND_PYTEST": {
      "steps": ["validate_syntax", "run_pytest", "PatchApplicatorStep"],
      "sanity_check_step": "run_pytest"
    },
    "FULL_VALIDATION": {
      "steps": ["validate_syntax", "run_pytest", "run_benchmark_validation", "PatchApplicatorStep"],
      "sanity_check_step": "run_pytest"
    },
    "DOC_UPDATE_STRATEGY": {
      "steps": ["validate_syntax", "PatchApplicatorStep", "check_file_existence"],
      "sanity_check_step": "check_file_existence"
    },
    "CONFIG_UPDATE_STRATEGY": {
      "steps": ["ValidateJsonSyntax", "validate_syntax", "PatchApplicatorStep"],
      "sanity_check_step": "check_file_existence"
    },
    "DISCARD": {
      "steps": [],
      "sanity_check_step": "skip_sanity_check"
    },
    "TEST_FIX_STRATEGY": {
      "steps": ["validate_syntax", "PatchApplicatorStep"],
      "sanity_check_step": "run_pytest"
    },
    "CREATE_NEW_TEST_FILE_STRATEGY": {
      "steps": ["validate_syntax", "run_pytest_new_file", "PatchApplicatorStep", "apply_patches_to_disk"],      "sanity_check_step": "run_pytest_new_file"
    },
    "AUTO_CORRECTION_STRATEGY": {
      "steps": ["validate_syntax", "PatchApplicatorStep", "run_pytest"],      "sanity_check_step": "run_pytest"
    }
  }
}